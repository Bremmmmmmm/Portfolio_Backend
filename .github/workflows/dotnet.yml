name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore

    - name: Depcheck
      uses: dependency-check/Dependency-Check_Action@main
      id: Depcheck
      with:
          project: 'test'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          args: >
            --failOnCVSS 7
            --enableRetired
      continue-on-error: true
    - name: Upload Test results
      uses: actions/upload-artifact@master
      with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
    
    - name: Test with coverage
      run: |
        dotnet test --collect:"XPlat Code Coverage;Format=opencover;Exclude=[DataAccess]*,[ViewerVerse_API]*"
        
    - name: Install ReportGenerator tool
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Create Coverage Report
      run: reportgenerator -reports:**/coverage.opencover.xml -targetdir:coverage/ -reporttypes:JsonSummary

    - name: Upload coverage to artifact
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: coverage/

    - name: Fail if coverage is under 80%
      run: |
        jsonFile="coverage/Summary.json"
        lineCoverage=$(grep -Po '"linecoverage": \K[0-9.]+' "$jsonFile")
        echo "Line coverage is $lineCoverage%"
                if (( $(echo "$lineCoverage < 80" |bc -l) )); then
          echo "Code coverage is less than 80%"
          exit 1
        fi
        
  SonarQube:
    runs-on: self-hosted
    needs: build

    steps:
     - name: Checkout code
       uses: actions/checkout@v4
       with:
         repository: Bremmmmmmm/Portfolio_Backend
     - name: Cache SonarQube and Scanner
       uses: actions/cache@v4
       with:
          path: |
            ~\.sonar\cache
            .\.sonar\scanner
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/sonar-project.properties') }}  # Key could be based on sonar properties
          restore-keys: |
            ${{ runner.os }}-sonar-
 
     - name: Install SonarQube Scanner
       shell: cmd
       run: |
          if not exist .\.sonar\scanner (
              mkdir .\.sonar\scanner
          )
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

     - name: Install dotnet-coverage
       run: dotnet tool install --global dotnet-coverage

       
     - name: Build and Analyze
       shell: cmd
       run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Bremmmmmmm_Portfolio_Backend_e30cca67-e530-4ab5-8159-f4a629493907" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build
          dotnet-coverage collect "dotnet test" -f xml-o "coverage.xml"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
